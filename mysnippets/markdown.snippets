priority -50

global !p
def create_table(snip):
	string = snip.buffer[snip.line].strip()
	rows = int(string[0])
	cols = int(string[1])

	# erase current line
	snip.buffer[snip.line] = ""

	body = ""
	delimeter = '|'
	pos = 1

	header = "" + delimeter
	for col in range(1, cols+1):
		header += ' $' + str(pos) + ' ' + delimeter
		pos += 1

	header_delimeter = "" + delimeter
	for col in range(1, cols+1):
		header_delimeter += ' --- ' + delimeter

	body += header + '\n' + header_delimeter + '\n'

	for row in range(1, rows):
		body_row = "" + delimeter
		for col in range(1, cols+1):
			body_row += ' $' + str(pos) + ' ' + delimeter
			pos += 1

		body += body_row + '\n'

	# expand anonymous snippet
	snip.expand_anon(body)
endglobal

snippet bold "bold" iw
**${1:${VISUAL}}**
endsnippet

snippet code "code" iw
\`\`\`${2:language}
${1:${VISUAL}}
\`\`\`
$0
endsnippet

snippet lcode "inline code" iw
\`${1:${VISUAL}}\`$0
endsnippet


snippet italic "italic" iw
*${1:${VISUAL}}*
endsnippet

snippet scratch "scratched" iw
~~${1:${VISUAL}}~~
endsnippet

snippet link "link" iw
[${1:${VISUAL:Text}}](${3:http://${2:www.url.com}})$0
endsnippet

snippet image "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

snippet comment "Comment"
<!-- ${1:${VISUAL}} -->$0
endsnippet


post_jump "create_table(snip)"
snippet "tbl([1-9][1-9])" "table row variable" br
`!p snip.rv = match.group(1)`
endsnippet


snippet "h([1-6])" "Markdown header" br
`!p snip.rv = int(match.group(1))*'#'` ${1: Section Title} `!p snip.rv = int(match.group(1))*'#'`
$0
endsnippet

# vim:ft=snippets:
