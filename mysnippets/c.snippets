#version 1

snippet for "for" b
for (int ${1:i} = ${2:0}; $1 < ${3:10}; $1++)
{
	${0:// Your code here};
}
endsnippet


snippet blank "start C" b
#include <stdio.h>


int main(void)
{
	${0:// Your program here}

	return 0;
}
endsnippet


snippet main "main" b
int main(void)
{
	${0:// Your code here}

	return 0;
}
endsnippet


snippet mainarg "mainArg" b
int main(int argc, char ** argv)
{
	${0:// Your code here}

	return 0;
}
endsnippet


snippet while "while" b
while(${1:condition1})
{
	${0:// Code}
}
endsnippet


snippet if "if" b
if (${1:condition1})
{
	${0:// Code}
}
endsnippet


snippet ifelse "ifelse" b
if (${1:condition1})
{
	${2:// Code 1}
}
else
{
	${3://Code 2}
}
endsnippet


snippet elif "elif" b
if (${1:condition1})
{
	${2:// Code 1}
}
else if (${3:condition2})
{
	${4:// Code 2}
}
endsnippet


snippet stdio "stdio" b
#include <stdio.h>
${0}
endsnippet


snippet inc "include" bA
#include <${1:foo}.h>
${0}
endsnippet


snippet linc "local include" bA
#include "${1:foo}.h"
${0}
endsnippet


snippet intfunc "int function" bA
int ${1:name}(${2:void})
{
	${0:// Your code here}

	return 0;
}
endsnippet


snippet func "function" bA
${1:type} ${2:name}(${3:void})
{
	${0:// Your $2 code here}

	return 0;
}
endsnippet


snippet p "printf selected" i
printf("${1:${VISUAL:text}}");
${0}
endsnippet


snippet printf "default printf" i
printf("${1:Hello world!}\n");
${0}
endsnippet


snippet fprintf "fprintf" i
fprintf(${1:stdout}, "${2:Hello world!}\n");
${0}
endsnippet


snippet typedef "typedef" b
typedef struct
{
	${0:// Code}
} ${1:name};
endsnippet


snippet struct "struct" b
struct
{
	${0:// Code}
} ${1:name};
endsnippet

snippet ifndef "ifndef" b
#ifndef ${1:SOME_DEFINE}
#define $1
$0
#endif /* $1 */
endsnippet
