#version 1
#PREAMBLE

# b - beginning of line
# i - in-word expansion for the first word
# w - inside the word
# r - python regular expression
# t - do not expand tabs
# s - remove whitespaces from the right of snippet
# m - remove all whitespaces form right
# e - costom context snippet
# A - triger autonatically

#####################################
#               DATES               #
#####################################
snippet today "today" i
`!v strftime("%d.%m.%y")`
endsnippet

snippet time "time" i
`!v strftime("%H:%M")`
endsnippet

snippet date "date" i
`!v strftime("%H:%M %d.%m.%y")`
endsnippet


#####################################
#               Progs               #
#####################################
snippet makefile "makefile" i
CC = gcc
TARGET = ${1:main}

ifeq ($(OS),Windows_NT) 
	REMOVE = -del /f
else
	REMOVE = -rm -rf
endif

SOURCES = $(wildcard *.c)
OBJECTS = $(SOURCES: .c = .o)

.PHONY: all clean install uninstall

all: $(TARGET)

.c.o:
	$(CC) -c $< -o $@

$(TARGET): $(OBJECTS)
	@echo "Compile for $(TARGET)"
	$(CC) $(OBJECTS) -o $@

install:
	@echo "Installation!"

uninstall:
	@echo "Uninstal!"

clean:
	@echo "Remove all executable and object files!"
	$(REMOVE) *.exe *.o $(TARGET)
endsnippet


snippet readme "README.md" i
#${1:Big header}

##ToDo:
* **bold text**
* *italic text*
* [denisov0gleb](https://github.com/denisov0gleb)

##Code:
```
int foo(void);
```
endsnippet

#####################################
#            Parenthesis            #
#####################################
snippet ( "Create a pair of ()" i
(${1:${VISUAL}})
endsnippet


snippet [ "Create a pair of []" i
[${1:${VISUAL}}]
endsnippet


snippet { "Create a pair of {}" i
{${1:${VISUAL}}}
endsnippet


snippet < "Create a pair of <>" i
<${1:${VISUAL}}>
endsnippet


snippet | "Create a pair of ||" i
|${1:${VISUAL}}|
endsnippet


snippet " "Create a pair of """ i
"${1:${VISUAL}}"
endsnippet


snippet ' "Create a pair of ''" i
'${1:${VISUAL}}'
endsnippet


snippet ) "Create a pair of parenthesis and put cursor behind" i
(${VISUAL})
endsnippet


snippet ] "Create a pair of square brackets and put cursor behind" i
[${VISUAL}]
endsnippet


snippet } "Create a pair of {} around visual selection" i
{
	${1:${VISUAL}}
}
endsnippet


snippet § "Create pair of $$" i
$${1:${VISUAL}}$
endsnippet


snippet §§ "Create pair of $$" i
$$${1:${VISUAL}}$$
endsnippet


#####################################
#               TEXT                #
#####################################
snippet hello "hello world" i
Hello world!$0
endsnippet
